name: Build, Deploy PGPChatAppMobile

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - 'PGPChatAppMobile/**'
jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ./PGPChatAppMobile/android/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('PGPChatAppMobile/android/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ./PGPChatAppMobile/android/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('PGPChatAppMobile/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        working-directory: ./PGPChatAppMobile/android
        run: chmod +x ./gradlew
      - name: Build Android App Bundle
        working-directory: ./PGPChatAppMobile/android
        run: ./gradlew assemble --no-daemon

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: ./PGPChatAppMobile/package.json
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version }}
          release_name: Release ${{ steps.package-version.outputs.current-version }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PGPChatAppMobile/android/app/build/outputs/apk/release/app-release.apk
          asset_name: PGPChatApp.apk
          asset_content_type: application/vnd.android.package-archive
